{
	"info": {
		"_postman_id": "ec43b7a0-04ca-4017-9d11-d568471f3437",
		"name": "Test HÃ¤fele eCommerce API V7 eCom test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11097815"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "/user/login?username=<string>&password=<string>&co_userid=<string>&licenseKey=<string>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"var autoJSONResponse = jsonData.AuthToken;\r",
									"pm.collectionVariables.set(\"authorizationKey\", autoJSONResponse);\r",
									"\r",
									"pm.test(\"Token generated: Login successfull\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.HttpStateMessage).to.equal(\"Login successfull\");\r",
									"    pm.expect(jsonData.AuthToken).to.exist;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/login?username={{username}}&licenseKey={{licenseKey}}&password={{password}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "licenseKey",
									"value": "{{licenseKey}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								},
								{
									"key": "co_userid",
									"value": "hkg573",
									"description": "co_userid",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "user is logged in",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>&co_userid=<string>&licenseKey=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "password",
											"value": "<string>"
										},
										{
											"key": "co_userid",
											"value": "<string>"
										},
										{
											"key": "licenseKey",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "login failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>&co_userid=<string>&licenseKey=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "password",
											"value": "<string>"
										},
										{
											"key": "co_userid",
											"value": "<string>"
										},
										{
											"key": "licenseKey",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavaiable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>&co_userid=<string>&licenseKey=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "password",
											"value": "<string>"
										},
										{
											"key": "co_userid",
											"value": "<string>"
										},
										{
											"key": "licenseKey",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "productinfo",
			"item": [
				{
					"name": "/productinfo/:version?articleNumber={{articleNumber}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    const responseJson = pm.response.json();\r",
									"    var query = {};\r",
									"    pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"    pm.test(\"Product Info: Status code is 200\", function () {\r",
									" \r",
									"    //Article Number assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].ArticleNumber).to.eql(query.articleNumber,\"ArticleNumber is not the same as the parameter. Assertion failed\");\r",
									"    pm.expect(responseJson.Articles[0].ArticleNumber).to.eql(query.articleNumber,\"ArticleNumber is not the same as the parameter. Assertion failed\");\r",
									"    //Article Name assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].ArticleName).to.eql('Cas.Minifix 15/19 zi.nick.',\"ArticleName is not the same as the parameter. Assertion failed\");\r",
									"    //QuantityUnitIso assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].QuantityUnitIso).to.not.empty;\r",
									"    //response code assertion\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "getDefinition",
								"value": "{{getDefinition}}",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productinfo/:version?articleNumber=26226535",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productinfo",
								":version"
							],
							"query": [
								{
									"key": "articleNumber",
									"value": "26226535"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/productinfo/:version?articleNumber={{articleNumber}}&quantity={{quantity}}&deliveryDate={{deliveryDate}}&posNumber={{posNumber}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"   const responseJson = pm.response.json();\r",
									"    var query = {};\r",
									"    pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"\r",
									"    pm.test(\"Product Info: Status code is 200\", function () {\r",
									"    //Article Number assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].ArticleNumber).to.eql(query.articleNumber,\"ArticleNumber is not the same as the parameter. Assertion failed\");\r",
									"    pm.expect(responseJson.Articles[0].ArticleNumber).to.eql(query.articleNumber,\"ArticleNumber is not the same as the parameter. Assertion failed\");\r",
									"    //Article Name assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].ArticleName).to.eql('Remote control RGB 12V/black',\"ArticleName is not the same as the parameter. Assertion failed\");\r",
									"    //QuantityUnitIso assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].QuantityUnitIso).to.not.empty;\r",
									"    //response code assertion\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "getDefinition",
								"value": "{{getDefinition}}",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productinfo/:version?articleNumber=83374708&quantity=0&deliveryDate=2020-12-24&posNumber=911",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productinfo",
								":version"
							],
							"query": [
								{
									"key": "articleNumber",
									"value": "83374708"
								},
								{
									"key": "quantity",
									"value": "0"
								},
								{
									"key": "deliveryDate",
									"value": "2020-12-24"
								},
								{
									"key": "posNumber",
									"value": "911"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/productinfo/:version?articleEanCode={{articleEanCode}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    const responseJson = pm.response.json();\r",
									"    var query = {};\r",
									"    pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									" \r",
									"    pm.test(\"Product Info: Status code is 200\", function () {\r",
									"    //Article EAN Code assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].ArticleEanCode).to.eql(query.articleEanCode,\"ArticleEanCode is not the same as the parameter. Assertion failed\");\r",
									"     pm.expect(responseJson.Articles[0].ArticleEanCode).to.eql(query.articleEanCode,\"ArticleEanCode is not the same as the parameter. Assertion failed\");\r",
									"    //Article Number assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].ArticleNumber).to.eql('26226535',\"ArticleNumber is not the same as the parameter. Assertion failed\");\r",
									"    //Article Name assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].ArticleName).to.eql('Cas.Minifix 15/19 zi.nick.',\"ArticleName is not the same as the parameter. Assertion failed\");\r",
									"    //QuantityUnitIso assertion\r",
									"    pm.expect(responseJson.ProductInformations[0].QuantityUnitIso).to.not.empty;\r",
									"    //response code assertion\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "getDefinition",
								"value": "{{getDefinition}}",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productinfo/:version?articleEanCode=4000934985882",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productinfo",
								":version"
							],
							"query": [
								{
									"key": "articleEanCode",
									"value": "4000934985882"
								},
								{
									"key": "articleNumber",
									"value": "26226535",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "extendedproductinfo",
			"item": [
				{
					"name": "/extendproductinfo/:version?articleNumber={{articleNumber}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    const responseJson = pm.response.json();\r",
									"    var query = {};\r",
									"    pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									" \r",
									"    pm.test(\"Extended Product Info: Status code is 200\", function () {\r",
									"    //Article Number assertion\r",
									"    pm.expect(responseJson.ExtendProductInfo[0].ArticleNumber).to.eql(query.articleNumber,\"ArticleNumber is not the same as the parameter. Assertion failed\");\r",
									"    pm.expect(responseJson.Articles[0].ArticleNumber).to.eql(query.articleNumber,\"ArticleNumber is not the same as the parameter. Assertion failed\");\r",
									"\r",
									"    //Article Name assertion\r",
									"   pm.expect(responseJson.ExtendProductInfo[0].ArticleName).to.eql('VerbindergehÃ¤use, HÃ¤fele MinifixÂ® 15, Zinkdruckguss, ohne Abdeckrand',\"ArticleName is not the same as the parameter. Assertion failed\");\r",
									"\r",
									"    //DefaultURL assertion\r",
									"    pm.expect(responseJson.ExtendProductInfo[0].PrimaryImage.DefaultUrl).to.not.empty;\r",
									"    //response code assertion\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/extendproductinfo/:version?articleNumber=26226535",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extendproductinfo",
								":version"
							],
							"query": [
								{
									"key": "articleNumber",
									"value": "26226535"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extendproductinfo/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extendproductinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extendproductinfo/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extendproductinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extendproductinfo/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extendproductinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extendproductinfo/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extendproductinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "orderlist",
			"item": [
				{
					"name": "/orderlist/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Order List: Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orderlist/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orderlist",
								":version"
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orderlist/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orderlist",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orderlist/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orderlist",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orderlist/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orderlist",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orderlist/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orderlist",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/orderlist/2?currentPage={{currentPage}}&filterSearchWord={{filterSearchWord}}&filterState={{filterState}}&itemsPerPage={{itemsPerPage}}&orderBy={{orderBy}}&filterPeriodStart={{filterPeriodStart}}&filterPeriodEnd={{filt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Order List: Status code is 200\", function () {\r",
									"    //OrderList array not empty assertion\r",
									"    pm.expect(responseJson.OrderList).to.not.empty;\r",
									"    \r",
									"    //status code assertion\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.collectionVariables.set(\"OrderNumber\", responseJson.OrderList[0].OrderNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "getDefinition",
								"value": "{{getDefinition}}",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orderlist/:version?orderBy=DATE_DESC&filterPeriodStart=2020-01-01&filterPeriodEnd=2020-12-17",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orderlist",
								":version"
							],
							"query": [
								{
									"key": "currentPage",
									"value": "1",
									"disabled": true
								},
								{
									"key": "filterSearchWord",
									"value": "700106542",
									"disabled": true
								},
								{
									"key": "filterState",
									"value": "ALL",
									"disabled": true
								},
								{
									"key": "itemsPerPage",
									"value": "100",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "DATE_DESC"
								},
								{
									"key": "filterPeriodStart",
									"value": "2020-01-01"
								},
								{
									"key": "filterPeriodEnd",
									"value": "2020-12-17"
								},
								{
									"key": "vkOrg",
									"value": "DE01",
									"disabled": true
								},
								{
									"key": "customerNumber",
									"value": "1047378",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "orderdetails",
			"item": [
				{
					"name": "/orderdetails/:version?orderNumber={{orderNumber}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"    var query = {};\r",
									"    pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"  \r",
									"\r",
									"pm.test(\"Order Details: Status code is 200\", function () {\r",
									"    //Order Number check\r",
									"   // pm.expect(responseJson.OrderNumber).to.eql(query.orderNumber,\"OrderNumber is not the same as the parameter. Assertion failed\");\r",
									"    pm.expect(responseJson.Order.OrderNumber).to.eql(query.orderNumber,\"OrderNumber is not the same as the parameter. Assertion failed\");\r",
									"    //order created status\r",
									"    pm.expect(responseJson.Order.OrderState).to.oneOf(['CREATED','CANCELED'],\"should be one of the values from the array\");\r",
									"    //check for position list not empty \r",
									"    //if order not cancelled\r",
									"     if(responseJson.Order.OrderState!='CANCELED'){\r",
									"        pm.expect(responseJson.Order.PositionList).to.not.empty;\r",
									"    }\r",
									"    else{//if order is cancelled its empty\r",
									"        pm.expect(responseJson.Order.PositionList).to.empty;\r",
									"    }      \r",
									"    //response code assertion\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orderdetails/:version?orderNumber={{OrderNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orderdetails",
								":version"
							],
							"query": [
								{
									"key": "orderNumber",
									"value": "{{OrderNumber}}"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productinfo/<string>?jsonRequest={\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "{\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productinfo/<string>?jsonRequest={\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "{\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productinfo/<string>?jsonRequest={\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "{\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/orderdetails/:version?orderNumber={{orderNumber}}&customerNumber={{customerNumber}}&vkOrg={{vkOrg}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"    var query = {};\r",
									"    pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"\r",
									"pm.test(\"Order Details: Status code is 200\", function () {\r",
									"    //Order Number check\r",
									"   // pm.expect(responseJson.OrderNumber).to.eql(query.orderNumber,\"OrderNumber is not the same as the parameter. Assertion failed\");\r",
									"   // pm.expect('0'+responseJson.Order.OrderNumber).to.eql(query.orderNumber,\"OrderNumber is not the same as the parameter. Assertion failed\");\r",
									"\r",
									"    //order created status\r",
									"    pm.expect(responseJson.Order.OrderState).to.oneOf(['CREATED','CANCELED'],\"should be one of the values from the array\");\r",
									"    \r",
									"    //check for position list not empty\r",
									"    //if order not cancelled\r",
									"     if(responseJson.Order.OrderState!='CANCELED'){\r",
									"        pm.expect(responseJson.Order.PositionList).to.not.empty;\r",
									"    }\r",
									"    else{//if order is cancelled its empty\r",
									"        pm.expect(responseJson.Order.PositionList).to.empty;\r",
									"    }\r",
									"\r",
									"    //response code assertion\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orderdetails/:version?vkOrg=DE01&language=DE&show9Digit=X&orderNumber={{OrderNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orderdetails",
								":version"
							],
							"query": [
								{
									"key": "customerNumber",
									"value": "CH5309161",
									"disabled": true
								},
								{
									"key": "vkOrg",
									"value": "DE01"
								},
								{
									"key": "language",
									"value": "DE"
								},
								{
									"key": "show9Digit",
									"value": "X"
								},
								{
									"key": "orderNumber",
									"value": "{{OrderNumber}}"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productinfo/<string>?jsonRequest={\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "{\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productinfo/<string>?jsonRequest={\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "{\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productinfo/<string>?jsonRequest={\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productinfo",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "{\"SalesOrganization\":\"<char, length=4>\",\"Source\":\"<char, length=6>\",\"RequestId\":\"<char, length=60>\",\"System\":\"<char, length=30>\",\"CustomerNumber\":\"<char, length=10>\",\"Language\":\"<char, length=2>\",\"ActionCode\":\"<char, length=30>\",\"Articles\":[{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"},{\"ShopPosNumber\":\"<numc, length=6>\",\"ArticleNumber\":\"<char, length=18>\",\"RequestedQuantity\":\"<char, length=18>\",\"QuantityUnitIso\":\"<char, length=8>\",\"RequestedDeliveryDate\":\"<dats, length=8>\"}],\"PriceType\":\"<char, length=1>\"}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "shipmentdetails",
			"item": [
				{
					"name": "/shipmentdetails/2?shipmentNumber={{shipmentNumber}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Shipment Details: Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shipmentdetails/:version?shipmentNumber=3131872315",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipmentdetails",
								":version"
							],
							"query": [
								{
									"key": "shipmentNumber",
									"value": "3131872315"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shipmentdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shipmentdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shipmentdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shipmentdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shipmentdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shipmentdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shipmentdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shipmentdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "toparticles",
			"item": [
				{
					"name": "/toparticles/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Top Articles: Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/toparticles/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"toparticles",
								":version"
							],
							"variable": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/toparticles/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"toparticles",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/toparticles/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"toparticles",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/toparticles/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"toparticles",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/toparticles/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"toparticles",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "customer",
			"item": [
				{
					"name": "/customer/{version}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"//savedData = JSON.stringify(responseJson.Customernumber);\r",
									"\r",
									"pm.test(\"Customer: Status code is 200\", function () {\r",
									"    \r",
									"    //check for Customernumber not empty\r",
									"    pm.expect(responseJson.Customernumber).to.not.empty;\r",
									"\r",
									"    //response code assertion\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.collectionVariables.set(\"Customernumber\", responseJson.Customernumber);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"Vkorg\":\"NL01\",\r\n \"Source\":\"CRM\",\r\n \"CRM\":\r\n {\r\n  \"Vat\":\"\",\r\n  \"PostalCode\":\"1074 CT\",\r\n  \"Url\":\"www.testfirmaâsonderzeichen.nl\",\r\n  \"Name\":\"Testfirma fÃ¼r HNL Sonderzeichen#*!\\\"\",\r\n  \"MarketSegment\":\"01\",\r\n  \"LanguageCode\":\"NL\",\r\n  \"Street\":\"Poststrasse 1\",\r\n  \"Name2\":\"mit zweiter Firmenbezeichnung und einem ganz langen Text bis ich nichts mehr weiÃ\",\r\n  \"ClassificationPercentage2\":\"0\",\r\n  \"ClassificationPercentage3\":\"0\",\r\n  \"Street2\":\"\",\r\n  \"ClassificationPercentage1\":\"100\",\r\n  \"CustomerSegment1\":\"102\",\r\n  \"CustomerSegment2\":\"\",\r\n  \"CustomerSegment3\":\"\",\r\n  \"CustomerGroup\":\"N03\",\r\n  \"City\":\"Amsterdam\",\r\n  \"Phone\":\"5123456789\",\r\n  \"PhoneNumberExtens\":\"11\",\r\n  \"PhoneNumberCountry\":\"DE\",\r\n  \"FaxNumber\":\"623533556\",\r\n  \"FaxNumberExtens\":\"22\",\r\n  \"FaxNumberCountry\":\"DE\",\r\n  \"MobileNumber\":\"12344\",\r\n  \"MobileNumberCountry\":\"DE\",\r\n  \"EMail\":\"info@testfirmaâsonderzeichen.nl\",\r\n  \"SalesOffice\":\"NLHQ\",\r\n  \"ClassificationSegment2\":\"\",\r\n  \"ClassificationSegment1\":\"\",\r\n  \"ClassificationSegment3\":\"\",\r\n  \"HouseNum\":\"\",\r\n  \"YearlyNumberEmployees\":\"\",\r\n  \"Country\":\"NL\",\r\n  \"Region\":\"\",\r\n  \"YearOfNumberEmployees\":\"\",\r\n  \"Street3\":\"\"\r\n }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customer/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer",
								":version"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/create/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"create",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/create/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"create",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/create/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"create",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/create/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"create",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/customer/{version}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Customer: Status code is 200\", function () {\r",
									"    //message to include update and success\r",
									"    pm.expect(pm.response.text()).to.include(\"Update\");\r",
									"    //status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"Vkorg\":\"NL01\",\r\n \"CustomerNumber\":{{Customernumber}},\r\n \"CRM_New\":\r\n {\r\n \"Vat\":\"\",\r\n  \"PostalCode\":\"1074 CT\",\r\n  \"Url\":\"www.testfirmaâsonderzeichen.nl\",\r\n  \"Name\":\"Testfirma fÃ¼r HNL Sonderzeichen#*!\\\"\",\r\n  \"MarketSegment\":\"01\",\r\n  \"LanguageCode\":\"NL\",\r\n  \"Street\":\"Poststrasse 22\",\r\n  \"Name2\":\"mit zweiter Firmenbezeichnung und einem ganz langen Text bis ich nichts mehr weiÃ\",\r\n  \"ClassificationPercentage2\":\"0\",\r\n  \"ClassificationPercentage3\":\"0\",\r\n  \"Street2\":\"\",\r\n  \"ClassificationPercentage1\":\"100\",\r\n  \"CustomerSegment1\":\"102\",\r\n  \"CustomerSegment2\":\"\",\r\n  \"CustomerSegment3\":\"\",\r\n  \"CustomerGroup\":\"\",\r\n  \"City\":\"Amsterdam\",\r\n  \"Phone\":\"5123456789\",\r\n  \"PhoneNumberExtens\":\"11\",\r\n  \"PhoneNumberCountry\":\"DE\",\r\n  \"FaxNumber\":\"623533556\",\r\n  \"FaxNumberExtens\":\"22\",\r\n  \"FaxNumberCountry\":\"DE\",\r\n  \"MobileNumber\":\"12344\",\r\n  \"MobileNumberCountry\":\"DE\",\r\n  \"EMail\":\"info@testfirmaâsonderzeichen.nl\",\r\n  \"SalesOffice\":\"NLHQ\",\r\n  \"ClassificationSegment2\":\"\",\r\n  \"ClassificationSegment1\":\"\",\r\n  \"ClassificationSegment3\":\"\",\r\n  \"HouseNum\":\"\",\r\n  \"YearlyNumberEmployees\":\"\",\r\n  \"Country\":\"NL\",\r\n  \"Region\":\"\",\r\n  \"YearOfNumberEmployees\":\"\",\r\n  \"Street3\":\"\"\r\n },\r\n \"CRM_Old\":\r\n {\r\n  \"Vat\":\"\",\r\n  \"PostalCode\":\"1074 CT\",\r\n  \"Url\":\"www.testfirmaâsonderzeichen.nl\",\r\n  \"Name\":\"Testfirma fÃ¼r HNL Sonderzeichen#*!\\\"\",\r\n  \"MarketSegment\":\"01\",\r\n  \"LanguageCode\":\"NL\",\r\n  \"Street\":\"Poststrasse 1\",\r\n  \"Name2\":\"mit zweiter Firmenbezeichnung und einem ganz langen Text bis ich nichts mehr weiÃ\",\r\n  \"ClassificationPercentage2\":\"0\",\r\n  \"ClassificationPercentage3\":\"0\",\r\n  \"Street2\":\"\",\r\n  \"ClassificationPercentage1\":\"100\",\r\n  \"CustomerSegment1\":\"102\",\r\n  \"CustomerSegment2\":\"\",\r\n  \"CustomerSegment3\":\"\",\r\n  \"CustomerGroup\":\"N03\",\r\n  \"City\":\"Amsterdam\",\r\n  \"Phone\":\"5123456789\",\r\n  \"PhoneNumberExtens\":\"11\",\r\n  \"PhoneNumberCountry\":\"DE\",\r\n  \"FaxNumber\":\"623533556\",\r\n  \"FaxNumberExtens\":\"22\",\r\n  \"FaxNumberCountry\":\"DE\",\r\n  \"MobileNumber\":\"12344\",\r\n  \"MobileNumberCountry\":\"DE\",\r\n  \"EMail\":\"info@testfirmaâsonderzeichen.nl\",\r\n  \"SalesOffice\":\"NLHQ\",\r\n  \"ClassificationSegment2\":\"\",\r\n  \"ClassificationSegment1\":\"\",\r\n  \"ClassificationSegment3\":\"\",\r\n  \"HouseNum\":\"\",\r\n  \"YearlyNumberEmployees\":\"\",\r\n  \"Country\":\"NL\",\r\n  \"Region\":\"\",\r\n  \"YearOfNumberEmployees\":\"\",\r\n  \"Street3\":\"\"\r\n },\r\n \"Source\":\"CRM\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customer/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer",
								":version"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/update/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"update",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/update/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"update",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/update/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"update",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/update/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"update",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "customerdetails",
			"item": [
				{
					"name": "/customerdetails/:version?customerNumber={{customerNumber}}&vkOrg={{vkOrg}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"    var query = {};\r",
									"    pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"\r",
									"pm.test(\"Customer Details: Status code is 200\", function () {\r",
									"    //check if customer number is same as request \r",
									"    pm.expect(responseJson.EsAddrKun.Kunnr).to.eql(query.customerNumber,\"customerNumber is not the same as the parameter. Assertion failed\");\r",
									"    //status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customerdetails/:version?customerNumber={{Customernumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customerdetails",
								":version"
							],
							"query": [
								{
									"key": "vkOrg",
									"value": "DE01",
									"disabled": true
								},
								{
									"key": "customerNumber",
									"value": "{{Customernumber}}"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customerdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customerdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customerdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customerdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customerdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customerdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customerdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customerdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "listquotation",
			"item": [
				{
					"name": "/listquotation/:version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"List of Quotation: Status code is 200\", function () {\r",
									"    //check if customer number is same as request \r",
									"    pm.expect(responseJson.QuotationList).to.not.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/quotationlist/:version?currentPage=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"quotationlist",
								":version"
							],
							"query": [
								{
									"key": "currentPage",
									"value": "1"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/listquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"listquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/listquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"listquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/listquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"listquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/listquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"listquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/listquotation/:version?currentPage={{currentPage}}&filterSearchWord={{filterSearchWord}}&filterState={{filterState}}&itemsPerPage={{itemsPerPage}}&orderBy={{orderBy}}&filterPeriodStart={{filterPeriodStart}}&filterPerio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"//savedData = JSON.stringify(responseJson.QuotationList[0].QuotationNumber);\r",
									"pm.test(\"List of Quotation: Status code is 200\", function () {\r",
									"    //check if customer number is same as request \r",
									"    pm.expect(responseJson.QuotationList).to.not.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.collectionVariables.set(\"QuotationNumber\", responseJson.QuotationList[0].QuotationNumber);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "getDefinition",
								"value": "{{getDefinition}}",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/quotationlist/:version?currentPage=1&filterState=ALL&itemsPerPage=100&orderBy=DATE_DESC&filterPeriodStart=2020-01-01&filterPeriodEnd=2020-12-17",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"quotationlist",
								":version"
							],
							"query": [
								{
									"key": "currentPage",
									"value": "1"
								},
								{
									"key": "filterSearchWord",
									"value": "Minfix",
									"disabled": true
								},
								{
									"key": "filterState",
									"value": "ALL"
								},
								{
									"key": "itemsPerPage",
									"value": "100"
								},
								{
									"key": "orderBy",
									"value": "DATE_DESC"
								},
								{
									"key": "filterPeriodStart",
									"value": "2020-01-01"
								},
								{
									"key": "filterPeriodEnd",
									"value": "2020-12-17"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "quotationdetails",
			"item": [
				{
					"name": "/quotationdetails/3?quotationNumber={{quotationNumber}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"var query = {};\r",
									"    pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"\r",
									"    pm.test(\"List of Quotation: Status code is 200\", function () {\r",
									"    //check if customer number is same as request \r",
									"    pm.expect(responseJson.QuotationNumber).to.eql('00'+query.quotationNumber);\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/quotationdetails/:version?quotationNumber={{QuotationNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"quotationdetails",
								":version"
							],
							"query": [
								{
									"key": "quotationNumber",
									"value": "{{QuotationNumber}}"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/quotationdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quotationdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/quotationdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quotationdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/quotationdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quotationdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/quotationdetails/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quotationdetails",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "createorder",
			"item": [
				{
					"name": "/createorder/:version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Create Order: Status code is 200\", function () {\r",
									"    //check if customer number is not empty \r",
									"    pm.expect(responseJson.Header.CustomerNumber).to.not.empty;\r",
									"    //check if AvailabilityInformation is not empty \r",
									"    pm.expect(responseJson.AvailabilityInformation).to.not.empty;\r",
									"    //check if Items is not empty \r",
									"    pm.expect(responseJson.Items).to.not.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n\t\"Header\": {\r\n\t\t\"CustomerNumber\": \"1047378\",\r\n\t\t\"DeliveryAddrCity\": \"Nagold\",\r\n\t\t\"DeliveryAddrCustomerNumber\": \"1047378\",\r\n\t\t\"DeliveryAddrHouseNo\": \"1\",\r\n\t\t\"DeliveryAddrHouseNoAdd\": \"\",\r\n\t\t\"DeliveryAddrName1\": \"HÃ¤fele GmbH\",\r\n\t\t\"DeliveryAddrName2\": \"eCom 573\",\r\n\t\t\"DeliveryAddrState\": \"BW\",\r\n\t\t\"DeliveryAddrStreet\": \"Adolf-HÃ¤fele-Str\",\r\n\t\t\"DeliveryAddrTyp\": \"E\",\r\n\t\t\"DeliveryAddrZip\": \"72202\",\r\n\t\t\"DeliveryWeek\": \"201733\",\r\n\t\t\"DeliveryTyp\": \"X\",\r\n\t\t\"LfdatH\": \"\",\r\n\t\t\"Lifsp\": \"\",\r\n\t\t\"CustomerQuotationNumber\": \"TestBestellungReferenz\",\r\n\t\t\"QuotationDate\": \"2016-09-21\",\r\n\t\t\"QuotationNumber\": \"\",\r\n\t\t\"PackComission\": \"\",\r\n\t\t\"PartnerNumber\": \"\",\r\n\t\t\"PickUpByCustomer\": \"\",\r\n\t\t\"SalesOrganization\": \"DE01\",\r\n\t\t\"Spart\": \"01\",\r\n\t\t\"Vkbur\": \"\",\r\n\t\t\"Vtweg\": \"01\"\r\n\t},\r\n\t\"Items\": [{\r\n\t\t\"ArticleNumber\": \"34242600\",\r\n\t\t\"Commission\": \"TEST\",\r\n\t\t\"DeliverPosition\": \"1\",\r\n\t\t\"DeliveryDate\": \"2017-08-18\",\r\n\t\t\"DeliveryYearWeek\": \"201733\",\r\n\t\t\"QuantityUnitIso\": \"PCE\",\r\n\t\t\"RequestedQuantity\": \"100\",\r\n\t\t\"ShopPosNumber\": \"123\"\r\n\t}],\r\n\t\"PriceInformation\": [{\r\n\t\t\"PricingCondition\":\"ZPM\",\r\n\t\t\"Stunr\": 500,\r\n\t\t\"QuantityPrice\": 1.25,\r\n\t\t\"CurrencyMnemonic\": \"EUR\",\r\n\t\t\"ShopPosNumber\": \"123\",\r\n\t\t\"PriceQuantityUnit\": 1\r\n\t}],\r\n    \"Language\": \"DE\",\r\n    \"Simulate\": \"X\",\r\n    \"Source\": \"API\",\r\n    \"TextMessages\": null\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/createorder/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"createorder",
								":version"
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Language\": \"<char, length=2>\",\n    \"Simulate\": \"<char, length=1>\",\n    \"Source\": \"<char, length=6>\",\n    \"Header\": {\n        \"CustomerNumber\": \"<char, length=10>\",\n        \"DeliveryAddrCity\": \"<char, length=35>\",\n        \"DeliveryAddrCustomerNumber\": \"<char, length=10>\",\n        \"DeliveryAddrHouseNo\": \"<char, length=10>\",\n        \"DeliveryAddrHouseNoAdd\": \"<char, length=10>\",\n        \"DeliveryAddrName1\": \"<char, length=35>\",\n        \"DeliveryAddrName2\": \"<char, length=35>\",\n        \"DeliveryAddrState\": \"<char, length=3>\",\n        \"DeliveryAddrStreet\": \"<char, length=30>\",\n        \"DeliveryAddrTyp\": \"<char, length=1>\",\n        \"DeliveryAddrZip\": \"<char, length=10>\",\n        \"DeliveryWeek\": \"<char, length=6>\",\n        \"LfdatH\": \"<char, length=8>\",\n        \"Lifsp\": \"<char, length=1>\",\n        \"OrderCustomerOderNumber\": \"<char, length=35>\",\n        \"OrderDate\": \"<char, length=8>\",\n        \"PackComission\": \"<char, length=1>\",\n        \"PartnerNumber\": \"<char, length=10>\",\n        \"PickUpByCustomer\": \"<char, length=1>\",\n        \"SalesOrganization\": \"<char, length=4>\",\n        \"Spart\": \"<char, length=12>\",\n        \"Vkbur\": \"<char, length=4>\",\n        \"Vtweg\": \"<char, length=2>\"\n    },\n    \"Items\": [\n        {\n            \"ArticleNumber\": \"<char, length=18>\",\n            \"CancelFlag\": \"<char, length=1>\",\n            \"Commission\": \"<char, length=35>\",\n            \"vDeliverPosition\": \"<char, length=1>\",\n            \"DeliveryDate\": \"<char, length=8>\",\n            \"DeliveryYearWeek\": \"<char, length=6>\",\n            \"QuantityUnitIso\": \"<char, length=3>\",\n            \"RequestedQuantity\": \"<float, length=15,3>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        },\n        {\n            \"ArticleNumber\": \"<char, length=18>\",\n            \"CancelFlag\": \"<char, length=1>\",\n            \"Commission\": \"<char, length=35>\",\n            \"vDeliverPosition\": \"<char, length=1>\",\n            \"DeliveryDate\": \"<char, length=8>\",\n            \"DeliveryYearWeek\": \"<char, length=6>\",\n            \"QuantityUnitIso\": \"<char, length=3>\",\n            \"RequestedQuantity\": \"<float, length=15,3>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        }\n    ],\n    \"TextMessages\": [\n        {\n            \"InfoText\": \"<char, length=132>\",\n            \"InfoTextFormat\": \"<char, length=2>\",\n            \"InfoTextId\": \"<char, length=4>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        },\n        {\n            \"InfoText\": \"<char, length=132>\",\n            \"InfoTextFormat\": \"<char, length=2>\",\n            \"InfoTextId\": \"<char, length=4>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/createorder/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createorder",
										"<string>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Language\": \"<char, length=2>\",\n    \"Simulate\": \"<char, length=1>\",\n    \"Source\": \"<char, length=6>\",\n    \"Header\": {\n        \"CustomerNumber\": \"<char, length=10>\",\n        \"DeliveryAddrCity\": \"<char, length=35>\",\n        \"DeliveryAddrCustomerNumber\": \"<char, length=10>\",\n        \"DeliveryAddrHouseNo\": \"<char, length=10>\",\n        \"DeliveryAddrHouseNoAdd\": \"<char, length=10>\",\n        \"DeliveryAddrName1\": \"<char, length=35>\",\n        \"DeliveryAddrName2\": \"<char, length=35>\",\n        \"DeliveryAddrState\": \"<char, length=3>\",\n        \"DeliveryAddrStreet\": \"<char, length=30>\",\n        \"DeliveryAddrTyp\": \"<char, length=1>\",\n        \"DeliveryAddrZip\": \"<char, length=10>\",\n        \"DeliveryWeek\": \"<char, length=6>\",\n        \"LfdatH\": \"<char, length=8>\",\n        \"Lifsp\": \"<char, length=1>\",\n        \"OrderCustomerOderNumber\": \"<char, length=35>\",\n        \"OrderDate\": \"<char, length=8>\",\n        \"PackComission\": \"<char, length=1>\",\n        \"PartnerNumber\": \"<char, length=10>\",\n        \"PickUpByCustomer\": \"<char, length=1>\",\n        \"SalesOrganization\": \"<char, length=4>\",\n        \"Spart\": \"<char, length=12>\",\n        \"Vkbur\": \"<char, length=4>\",\n        \"Vtweg\": \"<char, length=2>\"\n    },\n    \"Items\": [\n        {\n            \"ArticleNumber\": \"<char, length=18>\",\n            \"CancelFlag\": \"<char, length=1>\",\n            \"Commission\": \"<char, length=35>\",\n            \"vDeliverPosition\": \"<char, length=1>\",\n            \"DeliveryDate\": \"<char, length=8>\",\n            \"DeliveryYearWeek\": \"<char, length=6>\",\n            \"QuantityUnitIso\": \"<char, length=3>\",\n            \"RequestedQuantity\": \"<float, length=15,3>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        },\n        {\n            \"ArticleNumber\": \"<char, length=18>\",\n            \"CancelFlag\": \"<char, length=1>\",\n            \"Commission\": \"<char, length=35>\",\n            \"vDeliverPosition\": \"<char, length=1>\",\n            \"DeliveryDate\": \"<char, length=8>\",\n            \"DeliveryYearWeek\": \"<char, length=6>\",\n            \"QuantityUnitIso\": \"<char, length=3>\",\n            \"RequestedQuantity\": \"<float, length=15,3>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        }\n    ],\n    \"TextMessages\": [\n        {\n            \"InfoText\": \"<char, length=132>\",\n            \"InfoTextFormat\": \"<char, length=2>\",\n            \"InfoTextId\": \"<char, length=4>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        },\n        {\n            \"InfoText\": \"<char, length=132>\",\n            \"InfoTextFormat\": \"<char, length=2>\",\n            \"InfoTextId\": \"<char, length=4>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/createorder/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createorder",
										"<string>"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Language\": \"<char, length=2>\",\n    \"Simulate\": \"<char, length=1>\",\n    \"Source\": \"<char, length=6>\",\n    \"Header\": {\n        \"CustomerNumber\": \"<char, length=10>\",\n        \"DeliveryAddrCity\": \"<char, length=35>\",\n        \"DeliveryAddrCustomerNumber\": \"<char, length=10>\",\n        \"DeliveryAddrHouseNo\": \"<char, length=10>\",\n        \"DeliveryAddrHouseNoAdd\": \"<char, length=10>\",\n        \"DeliveryAddrName1\": \"<char, length=35>\",\n        \"DeliveryAddrName2\": \"<char, length=35>\",\n        \"DeliveryAddrState\": \"<char, length=3>\",\n        \"DeliveryAddrStreet\": \"<char, length=30>\",\n        \"DeliveryAddrTyp\": \"<char, length=1>\",\n        \"DeliveryAddrZip\": \"<char, length=10>\",\n        \"DeliveryWeek\": \"<char, length=6>\",\n        \"LfdatH\": \"<char, length=8>\",\n        \"Lifsp\": \"<char, length=1>\",\n        \"OrderCustomerOderNumber\": \"<char, length=35>\",\n        \"OrderDate\": \"<char, length=8>\",\n        \"PackComission\": \"<char, length=1>\",\n        \"PartnerNumber\": \"<char, length=10>\",\n        \"PickUpByCustomer\": \"<char, length=1>\",\n        \"SalesOrganization\": \"<char, length=4>\",\n        \"Spart\": \"<char, length=12>\",\n        \"Vkbur\": \"<char, length=4>\",\n        \"Vtweg\": \"<char, length=2>\"\n    },\n    \"Items\": [\n        {\n            \"ArticleNumber\": \"<char, length=18>\",\n            \"CancelFlag\": \"<char, length=1>\",\n            \"Commission\": \"<char, length=35>\",\n            \"vDeliverPosition\": \"<char, length=1>\",\n            \"DeliveryDate\": \"<char, length=8>\",\n            \"DeliveryYearWeek\": \"<char, length=6>\",\n            \"QuantityUnitIso\": \"<char, length=3>\",\n            \"RequestedQuantity\": \"<float, length=15,3>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        },\n        {\n            \"ArticleNumber\": \"<char, length=18>\",\n            \"CancelFlag\": \"<char, length=1>\",\n            \"Commission\": \"<char, length=35>\",\n            \"vDeliverPosition\": \"<char, length=1>\",\n            \"DeliveryDate\": \"<char, length=8>\",\n            \"DeliveryYearWeek\": \"<char, length=6>\",\n            \"QuantityUnitIso\": \"<char, length=3>\",\n            \"RequestedQuantity\": \"<float, length=15,3>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        }\n    ],\n    \"TextMessages\": [\n        {\n            \"InfoText\": \"<char, length=132>\",\n            \"InfoTextFormat\": \"<char, length=2>\",\n            \"InfoTextId\": \"<char, length=4>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        },\n        {\n            \"InfoText\": \"<char, length=132>\",\n            \"InfoTextFormat\": \"<char, length=2>\",\n            \"InfoTextId\": \"<char, length=4>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/createorder/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createorder",
										"<string>"
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Language\": \"<char, length=2>\",\n    \"Simulate\": \"<char, length=1>\",\n    \"Source\": \"<char, length=6>\",\n    \"Header\": {\n        \"CustomerNumber\": \"<char, length=10>\",\n        \"DeliveryAddrCity\": \"<char, length=35>\",\n        \"DeliveryAddrCustomerNumber\": \"<char, length=10>\",\n        \"DeliveryAddrHouseNo\": \"<char, length=10>\",\n        \"DeliveryAddrHouseNoAdd\": \"<char, length=10>\",\n        \"DeliveryAddrName1\": \"<char, length=35>\",\n        \"DeliveryAddrName2\": \"<char, length=35>\",\n        \"DeliveryAddrState\": \"<char, length=3>\",\n        \"DeliveryAddrStreet\": \"<char, length=30>\",\n        \"DeliveryAddrTyp\": \"<char, length=1>\",\n        \"DeliveryAddrZip\": \"<char, length=10>\",\n        \"DeliveryWeek\": \"<char, length=6>\",\n        \"LfdatH\": \"<char, length=8>\",\n        \"Lifsp\": \"<char, length=1>\",\n        \"OrderCustomerOderNumber\": \"<char, length=35>\",\n        \"OrderDate\": \"<char, length=8>\",\n        \"PackComission\": \"<char, length=1>\",\n        \"PartnerNumber\": \"<char, length=10>\",\n        \"PickUpByCustomer\": \"<char, length=1>\",\n        \"SalesOrganization\": \"<char, length=4>\",\n        \"Spart\": \"<char, length=12>\",\n        \"Vkbur\": \"<char, length=4>\",\n        \"Vtweg\": \"<char, length=2>\"\n    },\n    \"Items\": [\n        {\n            \"ArticleNumber\": \"<char, length=18>\",\n            \"CancelFlag\": \"<char, length=1>\",\n            \"Commission\": \"<char, length=35>\",\n            \"vDeliverPosition\": \"<char, length=1>\",\n            \"DeliveryDate\": \"<char, length=8>\",\n            \"DeliveryYearWeek\": \"<char, length=6>\",\n            \"QuantityUnitIso\": \"<char, length=3>\",\n            \"RequestedQuantity\": \"<float, length=15,3>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        },\n        {\n            \"ArticleNumber\": \"<char, length=18>\",\n            \"CancelFlag\": \"<char, length=1>\",\n            \"Commission\": \"<char, length=35>\",\n            \"vDeliverPosition\": \"<char, length=1>\",\n            \"DeliveryDate\": \"<char, length=8>\",\n            \"DeliveryYearWeek\": \"<char, length=6>\",\n            \"QuantityUnitIso\": \"<char, length=3>\",\n            \"RequestedQuantity\": \"<float, length=15,3>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        }\n    ],\n    \"TextMessages\": [\n        {\n            \"InfoText\": \"<char, length=132>\",\n            \"InfoTextFormat\": \"<char, length=2>\",\n            \"InfoTextId\": \"<char, length=4>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        },\n        {\n            \"InfoText\": \"<char, length=132>\",\n            \"InfoTextFormat\": \"<char, length=2>\",\n            \"InfoTextId\": \"<char, length=4>\",\n            \"ShopPosNumber\": \"<int, length=6>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/createorder/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createorder",
										"<string>"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "createquotation",
			"item": [
				{
					"name": "/createquotation/:version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Create Quotation: Status code is 200\", function () {\r",
									"    //check if customer number is not empty \r",
									"    pm.expect(responseJson.Header.CustomerNumber).to.not.empty;\r",
									"    //check if AvailabilityInformation is not empty \r",
									"    pm.expect(responseJson.AvailabilityInformation).to.not.empty;\r",
									"    //check if Items is not empty \r",
									"    pm.expect(responseJson.Items).to.not.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"Header\": {\r\n\t\t\"CustomerNumber\": \"1047378\",\r\n\t\t\"DeliveryAddrCity\": \"Nagold\",\r\n\t\t\"DeliveryAddrCustomerNumber\": \"1047378\",\r\n\t\t\"DeliveryAddrHouseNo\": \"1\",\r\n\t\t\"DeliveryAddrHouseNoAdd\": \"\",\r\n\t\t\"DeliveryAddrName1\": \"HÃ¤fele GmbH\",\r\n\t\t\"DeliveryAddrName2\": \"eCom 573\",\r\n\t\t\"DeliveryAddrState\": \"BW\",\r\n\t\t\"DeliveryAddrStreet\": \"Adolf-HÃ¤fele-Str\",\r\n\t\t\"DeliveryAddrTyp\": \"E\",\r\n\t\t\"DeliveryAddrZip\": \"72202\",\r\n\t\t\"DeliveryWeek\": \"201733\",\r\n\t\t\"DeliveryTyp\": \"X\",\r\n\t\t\"LfdatH\": \"\",\r\n\t\t\"Lifsp\": \"\",\r\n\t\t\"CustomerQuotationNumber\": \"TestBestellungReferenz\",\r\n\t\t\"QuotationDate\": \"2016-09-21\",\r\n\t\t\"QuotationNumber\": \"\",\r\n\t\t\"PackComission\": \"\",\r\n\t\t\"PartnerNumber\": \"\",\r\n\t\t\"PickUpByCustomer\": \"\",\r\n\t\t\"SalesOrganization\": \"DE01\",\r\n\t\t\"Spart\": \"01\",\r\n\t\t\"Vkbur\": \"\",\r\n\t\t\"Vtweg\": \"01\"\r\n\t},\r\n\t\"Items\": [{\r\n\t\t\"ArticleNumber\": \"34242600\",\r\n\t\t\"Commission\": \"TEST\",\r\n\t\t\"DeliverPosition\": \"1\",\r\n\t\t\"DeliveryDate\": \"2017-08-18\",\r\n\t\t\"DeliveryYearWeek\": \"201733\",\r\n\t\t\"QuantityUnitIso\": \"PCE\",\r\n\t\t\"RequestedQuantity\": \"100\",\r\n\t\t\"ShopPosNumber\": \"123\"\r\n\t}],\r\n\t\"PriceInformation\": [{\r\n\t\t\"PricingCondition\":\"ZPM\",\r\n\t\t\"Stunr\": 500,\r\n\t\t\"QuantityPrice\": 1.25,\r\n\t\t\"CurrencyMnemonic\": \"EUR\",\r\n\t\t\"ShopPosNumber\": \"123\",\r\n\t\t\"PriceQuantityUnit\": 1\r\n\t}],\r\n\r\n\t\"Language\": \"DE\",\r\n\t\"Simulate\": \"X\",\r\n\t\"Source\": \"API\",\r\n\t\"TextMessages\": [{\r\n\t\t\"InfoText\": \"\",\r\n\t\t\"InfoTextFormat\": \"\",\r\n\t\t\"InfoTextId\": \"\",\r\n\t\t\"ShopPosNumber\": \"\"\r\n\t}]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/createquotation/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"createquotation",
								":version"
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "contactperson",
			"item": [
				{
					"name": "/contactperson/1/?customerNumber={{Customernumber}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Contact Person: Status code is 200\", function () {\r",
									"    //check if ContactPersonNumberEx is not empty \r",
									"    pm.expect(responseJson.ContactPersonNumberEx).to.not.null;\r",
									"    //check if Messages is empty \r",
									"    pm.expect(responseJson.Messages).to.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.collectionVariables.set(\"ContactPersonNumberEx\", responseJson.ContactPersonNumberEx);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ContactPerson\": {\r\n        \"EMail\": \"hkg573@haefele.de\",\r\n        \"NameFirst\": \"Matthias\",\r\n        \"NameLast\": \"Walz\",\r\n        \"Title\": \"02\",\r\n        \"Gender\": \"1\",\r\n        \"Language\": \"4G\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contactperson/1/?customerNumber={{Customernumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contactperson",
								"1",
								""
							],
							"query": [
								{
									"key": "customerNumber",
									"value": "{{Customernumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "https://api-shop-test.aws.hafele.com/api/contactperson/1/?customerNumber=",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Contact Person: Status code is 200\", function () {\r",
									"    //check if ContactPersonNumberEx is not empty \r",
									"    pm.expect(responseJson.ContactPersonNumberEx).to.not.null;\r",
									"    //check if Messages is empty \r",
									"    pm.expect(responseJson.Messages).to.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"ContactPerson\": {\r\n\t\t\"EMail\":\"hkg573@haefele.de\",\r\n\t\t\"NameFirst\":\"Matthiasxxxx\",\r\n\t\t\"NameLast\":\"Walz\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contactperson/:version?customerNumber={{Customernumber}}&contactPersonNumber={{ContactPersonNumberEx}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contactperson",
								":version"
							],
							"query": [
								{
									"key": "customerNumber",
									"value": "{{Customernumber}}"
								},
								{
									"key": "contactPersonNumber",
									"value": "{{ContactPersonNumberEx}}"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contactperson/1/?customerNumber=",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Contact Person: Status code is 200\", function () {\r",
									"    //check if ContactPersonNumberEx is not empty \r",
									"    pm.expect(responseJson.ContactPersonNumberEx).to.not.null;\r",
									"    //check if Messages is empty \r",
									"    pm.expect(responseJson.Messages).to.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/contactperson/:version?customerNumber={{Customernumber}}&contactPersonNumber={{ContactPersonNumberEx}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contactperson",
								":version"
							],
							"query": [
								{
									"key": "customerNumber",
									"value": "{{Customernumber}}"
								},
								{
									"key": "contactPersonNumber",
									"value": "{{ContactPersonNumberEx}}"
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "changequotation",
			"item": [
				{
					"name": "/quotation/:version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Quotation: Status code is 200\", function () {\r",
									"    //check if CustomerNumber is not empty \r",
									"    pm.expect(responseJson.Header.CustomerNumber).to.not.empty;\r",
									"    //check if AvailabilityInformation is not empty \r",
									"    pm.expect(responseJson.AvailabilityInformation).to.not.empty;\r",
									"    //check if Items is not empty \r",
									"    pm.expect(responseJson.Items).to.not.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.collectionVariables.set(\"CustomerNumberQuotation\", responseJson.Header.CustomerNumber);\r",
									"pm.collectionVariables.set(\"QuotationId\", responseJson.Header.QuotationId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Header\": {\n        \"CustomerNumber\": \"CH4129931\",\n        \"DeliveryAddrCity\": \"Nagold\",\n        \"DeliveryAddrCustomerNumber\": \"CH4129931\",\n        \"DeliveryAddrHouseNo\": \"1\",\n        \"DeliveryAddrHouseNoAdd\": \"\",\n        \"DeliveryAddrName1\": \"HÃ¤fele GmbH\",\n        \"DeliveryAddrName2\": \"eCom 573\",\n        \"DeliveryAddrState\": \"BW\",\n        \"DeliveryAddrStreet\": \"Adolf-HÃ¤fele-Str\",\n        \"DeliveryAddrTyp\": \"E\",\n        \"DeliveryAddrZip\": \"72202\",\n        \"DeliveryWeek\": \"202033\",\n        \"DeliveryTyp\": \"X\",\n        \"LfdatH\": \"\",\n        \"Lifsp\": \"\",\n        \"CustomerQuotationNumber\": \"TestBestellungReferenz\",\n        \"QuotationDate\": \"20200808\",\n        \"QuotationNumber\": \"\",\n        \"PackComission\": \"\",\n        \"PartnerNumber\": \"\",\n        \"PickUpByCustomer\": \"\",\n        \"SalesOrganization\": \"CH01\",\n        \"Spart\": \"01\",\n        \"Vkbur\": \"\",\n        \"Vtweg\": \"01\"\n    },\n    \"Items\": [\n        {\n            \"ArticleNumber\": \"55122734\",\n            \"Commission\": \"-ZPL-\",\n            \"DeliverPosition\": \"1\",\n            \"DeliveryDate\": \"20200818\",\n            \"DeliveryYearWeek\": \"202033\",\n            \"QuantityUnitIso\": \"PCE\",\n            \"RequestedQuantity\": \"1\",\n            \"ShopPosNumber\": \"110\"\n        },\n        {\n            \"ArticleNumber\": \"55122738\",\n            \"Commission\": \"+ZPL+\",\n            \"DeliverPosition\": \"1\",\n            \"DeliveryDate\": \"20200818\",\n            \"DeliveryYearWeek\": \"202033\",\n            \"QuantityUnitIso\": \"PCE\",\n            \"RequestedQuantity\": \"1\",\n            \"ShopPosNumber\": \"112\"\n        }\n    ],\n   \n    \"Language\": \"DE\",\n    \"Simulate\": \"\",\n    \"Source\": \"API\",\n    \"TextMessages\": [\n        {\n            \"InfoText\": \"\",\n            \"InfoTextFormat\": \"\",\n            \"InfoTextId\": \"\",\n            \"ShopPosNumber\": \"\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/quotation/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"quotation",
								":version"
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/quotation/:version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Quotation: Status code is 200\", function () {\r",
									"    //check if CustomerNumber is not empty \r",
									"    pm.expect(responseJson.Header.CustomerNumber).to.not.empty;\r",
									"    //check if QuotationNumber is not empty \r",
									"    pm.expect(responseJson.Header.QuotationNumber).to.not.empty;\r",
									"    //check if AvailabilityInformation is not empty \r",
									"    pm.expect(responseJson.AvailabilityInformation).to.not.empty;\r",
									"    //check if Items is not empty \r",
									"    pm.expect(responseJson.Items).to.not.empty;\r",
									"    // status code check\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorizationKey}}",
								"description": "token used for user authentication"
							},
							{
								"key": "getDefinition",
								"value": "<string>",
								"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{aws-api-key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Header\": {\n        \"CustomerNumber\":{{CustomerNumberQuotation}},\n        \"QuotationNumber\": {{QuotationId}},\n        \"SalesOrganization\": \"CH01\",\n        \"Spart\": \"01\",\n        \"Vkbur\": \"\",\n        \"Vtweg\": \"01\"\n    },\n    \"Items\": [\n        {\n            \"ArticleNumber\": \"55122734\",\n            \"Commission\": \"Change -ZPL-\",\n            \"DeliverPosition\": \"\",\n            \"DeliveryDate\": \"20200820\",\n            \"DeliveryYearWeek\": \"202033\",\n            \"QuantityUnitIso\": \"PCE\",\n            \"RequestedQuantity\": \"3\",\n            \"ShopPosNumber\": \"110\",\n            \"ErpPosNumber\":\"100\"\n        },\n         {\n            \"ArticleNumber\": \"55122738\",\n            \"Commission\": \"Change +ZPL+\",\n            \"DeliverPosition\": \"\",\n            \"DeliveryDate\": \"20200820\",\n            \"DeliveryYearWeek\": \"202033\",\n            \"QuantityUnitIso\": \"PCE\",\n            \"RequestedQuantity\": \"3\",\n            \"ShopPosNumber\": \"112\",\n            \"ErpPosNumber\":\"200\"\n        }\n    ],\n    \"PriceInformation\": [\n        {\n        \t\"ErpPosNumber\":700,\n            \"PricingCondition\": \"ZPM\",\n            \"Stunr\": 500,\n            \"QuantityPrice\": 1.23,\n            \"CurrencyMnemonic\": \"EUR\",\n            \"ShopPosNumber\": \"145\",\n            \"PriceQuantityUnit\": 100\n        }\n    ],\n    \"Language\": \"DE\",\n    \"Simulate\": \"X\",\n    \"Source\": \"API\",\n    \"TextMessages\": [\n        {\n            \"InfoText\": \"\",\n            \"InfoTextFormat\": \"\",\n            \"InfoTextId\": \"\",\n            \"ShopPosNumber\": \"\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/quotation/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"quotation",
								":version"
							],
							"variable": [
								{
									"key": "version",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "service is currently unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "expectation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "authorization has failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "request was proceessed successfull",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "token used for user authentication"
									},
									{
										"key": "getDefinition",
										"value": "<string>",
										"description": "this flag determines the exact service-definition in the sap-backend<br>(valid values are '1' for import-parameters, '2' for export-parameters and '3' for both)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createquotation/<string>?jsonRequest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createquotation",
										"<string>"
									],
									"query": [
										{
											"key": "jsonRequest",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api-shop-test.hafele.com/api"
		},
		{
			"key": "username",
			"value": "1047378"
		},
		{
			"key": "password",
			"value": "HQ4-TEST"
		},
		{
			"key": "licenseKey",
			"value": "0001047378"
		},
		{
			"key": "aws-api-key",
			"value": "WzjwcfcqM979GnAoUb70u5SQVgK43KS72QUMaS9p"
		},
		{
			"key": "authorizationKey",
			"value": ""
		},
		{
			"value": ""
		},
		{
			"key": "Customernumber",
			"value": ""
		},
		{
			"key": "QuotationNumber",
			"value": ""
		},
		{
			"key": "ContactPersonNumberEx",
			"value": ""
		},
		{
			"key": "CustomerNumberQuotation",
			"value": ""
		},
		{
			"key": "QuotationId",
			"value": ""
		},
		{
			"key": "OrderNumber",
			"value": ""
		}
	]
}
